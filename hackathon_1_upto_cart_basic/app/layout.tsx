"use client";
import CartContext from "./components/Context/cartcontext";
import Copyright from "./components/copyright";
import Footer from "./components/footer/footer";
import Header from "./components/header";
import "./globals.css";
import { Inter } from "next/font/google";

import { useContext, useState } from "react";
//const ThemeContext = createContext([]);

const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  //const [cartGlobalState,setCartGlobalState] : [ Record<string,any>[]|null , any] = useState([]);

  const [cartGlobalState, setCartGlobalState] = useState([""]);
  //console.log("cartGlobalState =>" ,cartGlobalState);

//   // productData: Record<
//   string | number,
//   | string
//   | number
//   | Record<
//       string | number,
//       string | number | Record<string | number, string | number>[]
//     >
// >[]

  const UpdateCart = (
    productData: any ) => {
    let indexOfProductCheck = -999;
    cartGlobalState.forEach((item:any, index:number) => {
      if (item.id == productData.id) {
        let specskey:any = Object.keys(productData.specs);
        console.log("specskey =>", specskey);
        if (specskey in item.specs) {
          productData.specs[specskey[0]] =
            Number(productData.specs[specskey[0]]) +
            Number(item.specs[specskey[0]]);
        }
        // } else {
        //   productData.specs = { ...productData.specs, ...item.specs };
        // }
        productData.specs = { ...item.specs, ...productData.specs };
        indexOfProductCheck = index;
        console.log("indexOfProductCheck", indexOfProductCheck);
        return;
      }
    });
    console.log("indexOfProductCheck outside", indexOfProductCheck);
    console.log("productData outside", productData);
    console.log("cartGlobalState outside", cartGlobalState);

    console.log("indexOfProductCheck =>", indexOfProductCheck);

    if (indexOfProductCheck == -999) {
      setCartGlobalState((cartGlobalState) =>
        cartGlobalState[0] ? [...cartGlobalState, productData] : [productData]
      );
    } else {
      cartGlobalState[indexOfProductCheck] = productData;
      setCartGlobalState((cartGlobalState) => [...cartGlobalState]);
    }

    // setCartGlobalState( (cartGlobalState) => (cartGlobalState[0]) ? [...cartGlobalState , productData] : [ productData] );
  };

  return (
    <html lang="en">
      <body className={inter.className}>
        <main className="m-auto max-w-7xl">
          {/* @ts-ignore */}
          <CartContext.Provider value={{ cartGlobalState, UpdateCart }}>
            <Header />
            {children}
          </CartContext.Provider>

          <Footer />
        </main>
        <Copyright />
      </body>
    </html>
  );
}
